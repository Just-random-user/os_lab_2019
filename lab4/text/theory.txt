#2

Зомби-процесс -- дочерний процесс программы, завершивший выполнение задания и не занимающий памяти, но
оставшийся в таблице процессов до прочтения кода его завершения родительской программой.

Опасны зомби-процессы программ длительного выполнения, или при параллельном открытии большого количества программ,
использующих дочерние процессы. Когда появляется много зомби-процессов, они блокируют запись в таблицу процессов
и тогда высока вероятность того, что придётся перезагружать компьютер для восстановления работоспособности
(командную строку или системный монитор тоже являются дочерними процессами, поэтому их вызвать не получится).
Чтобы окончательно убрать зомби-процесс, необходимо считать его код завершения с помощью wait(). Для небольших
программ это необязательно, так как код завершения каждого дочернего процесса считывается при завершении основной программы.

Before running zombie.c: 
sh-4.2$ ps -aux
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
1012910+     1  0.0  0.0   4368   360 ?        Ss   13:38   0:00 sleep infinity
1012910+    20  0.0  0.0  11828  1904 ?        Ss   13:40   0:00 sh
1012910+    34  0.0  0.0  51760  1708 ?        R+   14:16   0:00 ps -aux

While running zombie.c:
sh-4.2$ ./zombie
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
1012910+     1  0.0  0.0   4368   360 ?        Ss   13:38   0:00 sleep infinity
1012910+    20  0.0  0.0  11832  1924 ?        Ss   13:40   0:00 sh
1012910+   232  0.0  0.0   4216   356 ?        S+   15:06   0:00 ./zombie
1012910+   233  0.0  0.0      0     0 ?        Z+   15:06   0:00 [zombie] <defunct>
1012910+   234  0.0  0.0  51760  1704 ?        R+   15:06   0:00 ps -aux
Code: 233

notice the 4-th string.

#3

Address etext:   40098D 
Address edata:   601078 
Address end  :   6010B0 
ID main          is at virtual address:   40072D
ID showit        is at virtual address:   400856
ID cptr          is at virtual address:   601070
ID buffer1       is at virtual address:   601090
ID i     is at virtual address: F433D7BC
A demonstration
ID buffer2       is at virtual address: F433D798
Alocated memory at 1DB3010
This message is output by the function showit()

etext, edata and end - первые адреса памяти, следующие за концом записи программного кода, за концом инициализированной
памяти для данных и за концом неинициализированных данных соответственно.

#4

sh-4.2$ ./par_sum --threads_num 2 --array_size 15 --seed 3
Total: 1760101845